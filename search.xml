<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>使用Hexo搭建博客</title>
    <url>/2021/05/10/Hello-World-0/</url>
    <content><![CDATA[<h2 id="使用Hexo搭建博客"><a href="#使用Hexo搭建博客" class="headerlink" title="使用Hexo搭建博客"></a>使用Hexo搭建博客</h2><ol>
<li><p>下载Hexo<br><code>npm i -g hexo-cli</code></p>
</li>
<li><p>创建文件夹<br><code>mkdir blog</code></p>
</li>
<li><p>初始化 hexo<br><code>hexo init</code></p>
</li>
<li><p>启动 hexo 预览<br><code>hexo s</code><br>然后输入<code>localhost:4000</code>访问</p>
</li>
</ol>
<span id="more"></span>

<ol start="5">
<li>创建文字<br><code>hexo n 标题</code></li>
</ol>
<h2 id="部署到-github"><a href="#部署到-github" class="headerlink" title="部署到 github"></a>部署到 github</h2><ol>
<li><p>新建仓库</p>
<blockquote>
<p>注意 仓库名是 github名+github+io</p>
<blockquote>
<p>如：ZhangWeijie-Z.github.io</p>
</blockquote>
</blockquote>
</li>
<li><p>下载插件<br><code>npm i hexo-deployer-git --save</code></p>
</li>
<li><p>更改根目录下 _config.yml 文件</p>
</li>
</ol>
<ul>
<li>滑动到最下面 <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">type: git</span><br><span class="line">repo: 仓库地址</span><br><span class="line">branch: master</span><br></pre></td></tr></table></figure></li>
</ul>
<ol start="4">
<li><p>生成github仓库<br><code>hexo d</code></p>
</li>
<li><p>访问 ZhangWeijie-Z.github.io</p>
</li>
</ol>
<h2 id="更改主题"><a href="#更改主题" class="headerlink" title="更改主题"></a>更改主题</h2><ol>
<li><p>克隆主题<br><code>git clone 地址 themes/文件夹名</code> </p>
</li>
<li><p>更改根目录下_config.yml 文件</p>
</li>
</ol>
<ul>
<li>找到 theme<br><code>theme: 跟上主题文件夹名</code></li>
</ul>
<ol start="3">
<li><p>清理缓存<br><code>hexo clean</code></p>
</li>
<li><p>预览看看没问题就推上github</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 启动本地服务器 预览主题</span></span><br><span class="line">hexo s</span><br><span class="line"></span><br><span class="line"><span class="comment">// 生成网站静态文件到默认设置的 public 文件夹</span></span><br><span class="line">hexo g</span><br><span class="line"></span><br><span class="line"><span class="comment">// 自动生成网站静态文件，并部署到设定的仓库</span></span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure></li>
</ol>
]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>前端</tag>
      </tags>
  </entry>
  <entry>
    <title>MarkDown语法</title>
    <url>/2021/05/11/MarkDown%E8%AF%AD%E6%B3%95/</url>
    <content><![CDATA[<h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><ul>
<li>列表<br>  子列表</li>
<li>列表</li>
</ul>
<span id="more"></span>

<p><em>斜线字体</em></p>
<p><strong>字体加粗</strong></p>
<blockquote>
<p>引用内容</p>
</blockquote>
<center>这一行需要居中</center>

<hr>
<hr>
<p><code>&lt;html&gt;代码块&lt;/html&gt;</code></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">    <span class="xml"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span></span><br><span class="line">    <span class="xml"><span class="tag">&lt;<span class="name">body</span>&gt;</span><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>

<ul>
<li><p>超链接文字<br><a href="https://github.com/ZhangWeijie-Z">我的github地址</a></p>
</li>
<li><p>插入图片<br><img src="http://img.doutula.com/production/uploads/image/2021/05/11/20210511698702_QRjahM.gif" alt="插入图片"></p>
</li>
</ul>
]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>MarkDown</tag>
      </tags>
  </entry>
  <entry>
    <title>Vue2.0基础</title>
    <url>/2021/05/12/vue2-0%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<h2 id="1-Vue-js-是什么"><a href="#1-Vue-js-是什么" class="headerlink" title="1.Vue.js 是什么"></a>1.Vue.js 是什么</h2><p>Vue (读音 /vjuː/，类似于 view) 是一套用于构建用户界面的<strong>渐进式框架</strong>,Vue 被设计为可以<strong>自底向上逐层应用</strong>。Vue 的核心库只关注<strong>视图层</strong>，不仅易于上手，还便于与第三方库或既有项目整合。</p>
<p>言简意赅，Vue 是<strong>JavaScript</strong>的框架，Vue 可以简化<strong>Dom</strong>操作，可以<strong>响应式</strong>数据驱动</p>
<h2 id="2-Vue-基础语法"><a href="#2-Vue-基础语法" class="headerlink" title="2.Vue 基础语法"></a>2.Vue 基础语法</h2><h3 id="1-引入标签"><a href="#1-引入标签" class="headerlink" title="1.引入标签"></a>1.引入标签</h3><p>初学时建议先学习<strong>语法</strong>，不推荐直接使用<code>vue-cli</code><br>学习的时候建议引用<em>开发环境版本</em></p>
<span id="more"></span>

<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;!-- 开发环境版本，包含了有帮助的命令行警告 --&gt;</span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure>

<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;!-- 生产环境版本，优化了尺寸和速度 --&gt;</span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure>

<h3 id="2-模板语法"><a href="#2-模板语法" class="headerlink" title="2.模板语法"></a>2.模板语法</h3><p>演示代码:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 使用模板语法把数据渲染到页面上 --&gt;</span></span><br><span class="line">    &#123;&#123; message &#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 创建 Vue 实例对象</span></span><br><span class="line"><span class="keyword">let</span> app = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">    <span class="comment">// 设置 el 属性 和 data 属性</span></span><br><span class="line">    <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span><br><span class="line">    <span class="attr">data</span>: &#123;</span><br><span class="line">        <span class="attr">message</span>: <span class="string">&#x27;Hello Vue!&#x27;</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<p>查看页面，并且实时修改 app.message 的值，页面上的数据也会做出相应的变化</p>
<h3 id="3-el-挂载点"><a href="#3-el-挂载点" class="headerlink" title="3.el 挂载点"></a>3.el 挂载点</h3><p>演示代码:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span> <span class="attr">class</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    &#123;&#123; message &#125;&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123; message &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> app = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">    <span class="comment">// 推荐使用 id选择器 因为默认 id选择器不会重复</span></span><br><span class="line">    <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span><br><span class="line">    <span class="comment">// el:&#x27;.app&#x27;,</span></span><br><span class="line">    <span class="comment">// el:&#x27;div&#x27;,</span></span><br><span class="line">    <span class="attr">data</span>: &#123;</span><br><span class="line">        <span class="attr">message</span>: <span class="string">&#x27;Hello Vue!&#x27;</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<ul>
<li>  Vue 会管理 el 选项<strong>命中的元素</strong>及其内部的<strong>后代元素</strong></li>
<li>  可以使用其他的选择器，但建议使用<em>ID 选择器</em></li>
<li>  可以使用其它的<strong>双标签</strong>，但不能使用*<strong>*HTML 和 body 标签</strong></li>
</ul>
<h3 id="4-data-数据对象"><a href="#4-data-数据对象" class="headerlink" title="4.data 数据对象"></a>4.data 数据对象</h3><p>演示代码:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    &#123;&#123; message &#125;&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>&#123;&#123; school.name &#125;&#125; &#123;&#123; school.age &#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>&#123;&#123; campus[0] &#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>&#123;&#123; campus[1] &#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>&#123;&#123; campus[2] &#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>&#123;&#123; campus[3] &#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> app = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">    <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span><br><span class="line">    <span class="attr">data</span>: &#123;</span><br><span class="line">        <span class="attr">message</span>: <span class="string">&#x27;Hello Vue!&#x27;</span>,</span><br><span class="line">        <span class="attr">school</span>: &#123;</span><br><span class="line">            <span class="attr">name</span>: <span class="string">&#x27;小张&#x27;</span>,</span><br><span class="line">            <span class="attr">age</span>: <span class="number">18</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">campus</span>: [<span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;2&#x27;</span>, <span class="string">&#x27;3&#x27;</span>, <span class="string">&#x27;4&#x27;</span>],</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<p><img src="/images/vue2/data1.png"></p>
<ul>
<li>  Vue 中用到的数据定义在<em>data</em>中</li>
<li>  data 中可以写<strong>复杂类型</strong>的数据</li>
<li>  渲染复杂类型数据时，遵循<em>js 语法</em>即可</li>
</ul>
<h2 id="3-Vue-指令"><a href="#3-Vue-指令" class="headerlink" title="3.Vue 指令"></a>3.Vue 指令</h2><ul>
<li>  通过<strong>Vue</strong>来实现常见的网页效果</li>
<li>  <strong>Vue 指令</strong>指的是以 <strong>v-</strong> 开头的一组特殊语法</li>
</ul>
<h3 id="1-v-text"><a href="#1-v-text" class="headerlink" title="1.v-text"></a>1.v-text</h3><p>演示代码:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span> <span class="attr">v-text</span>=<span class="string">&quot;message+&#x27;!&#x27;&quot;</span>&gt;</span>1<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span> <span class="attr">v-text</span>=<span class="string">&quot;demo+&#x27;!&#x27;&quot;</span>&gt;</span>2<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>&#123;&#123; demo+&#x27;!&#x27; &#125;&#125;3<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> app = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">    <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span><br><span class="line">    <span class="attr">data</span>: &#123;</span><br><span class="line">        <span class="attr">message</span>: <span class="string">&#x27;Hello Vue!&#x27;</span>,</span><br><span class="line">        <span class="attr">demo</span>: <span class="string">&#x27;demo&#x27;</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<p><img src="/images/vue2/v-text.png"></p>
<ul>
<li>  <strong>v-text</strong>指令作用是：设置标签的内容(textContent)</li>
<li>  默认写法会替换全部内容，使用 <strong>插值表达式<code>&#123;&#123;&#125;&#125;</code></strong> 可以替换指定内容</li>
</ul>
<h3 id="2-v-html"><a href="#2-v-html" class="headerlink" title="2.v-html"></a>2.v-html</h3><p>演示代码:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">v-html</span>=<span class="string">&quot;content&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">v-text</span>=<span class="string">&quot;content&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> app = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">    <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span><br><span class="line">    <span class="attr">data</span>: &#123;</span><br><span class="line">        <span class="attr">content</span>: <span class="string">&quot;&lt;a href=&#x27;https://github.com/ZhangWeijie-Z&#x27;&gt; 超链接 &lt;/a&gt;&quot;</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<p><img src="/images/vue2/v-html.png"></p>
<ul>
<li>  <strong>v-html</strong>指令作用是：设置元素的<strong>innerHTML</strong></li>
<li>  内容中有<em>html</em>结构会被解析为标签</li>
<li>  <strong>v-text</strong>指令无论内容是什么，只会解析为文本</li>
</ul>
<h3 id="3-v-on"><a href="#3-v-on" class="headerlink" title="3.v-on"></a>3.v-on</h3><p>演示代码:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;v-on指令&quot;</span> <span class="attr">v-on:click</span>=<span class="string">&quot;doIt&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;v-on简写&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;doIt&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;鼠标移入事件&quot;</span> <span class="attr">v-on:mouseenter</span>=<span class="string">&quot;doIt&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;鼠标双击事件&quot;</span> <span class="attr">v-on:dblclick</span>=<span class="string">&quot;doIt&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span> @<span class="attr">click</span>=<span class="string">&quot;changeFood&quot;</span>&gt;</span>&#123;&#123; food &#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> app = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">    <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span><br><span class="line">    <span class="attr">data</span>: &#123;</span><br><span class="line">        <span class="attr">food</span>: <span class="string">&#x27;西兰花炒蛋&#x27;</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">methods</span>: &#123;</span><br><span class="line">        <span class="attr">doIt</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            alert(<span class="string">&#x27;123&#x27;</span>)</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">changeFood</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="comment">// console.log(this.food)</span></span><br><span class="line">            <span class="built_in">this</span>.food += <span class="string">&#x27;蛋炒西兰花&#x27;</span></span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<p><img src="/images/vue2/v-on.gif"></p>
<ul>
<li>  <strong>v-on</strong>指令作用是：为元素绑定<strong>事件</strong></li>
<li>  事件名不需要写 <strong>on</strong></li>
<li>  指令可以简写为 <strong>@</strong></li>
<li>  绑定方法可以定义在<strong>methods</strong>属性中</li>
</ul>
<h3 id="4-计数器练习"><a href="#4-计数器练习" class="headerlink" title="4.计数器练习"></a>4.计数器练习</h3><p>演示效果:<br><img src="/images/vue2/demo1.gif"></p>
<ol>
<li><strong>data</strong>中定义数据： <strong>num</strong></li>
<li><strong>methods</strong>中添加两个方法：<strong>add(递增)，sub(递减)</strong></li>
<li>使用<strong>v-text</strong>将<strong>num</strong>设置给<strong>span</strong>标签</li>
<li>使用<strong>v-on</strong>将<strong>add,sub</strong>分别绑定给 <strong>+</strong> ，**-** 按钮</li>
<li>递增的逻辑：小于<strong>10</strong>递增，否则提示</li>
<li>递减的逻辑：大于<strong>0</strong>递减，否则提示</li>
</ol>
<center>加油，你可以的!</center>

<h3 id="5-v-show"><a href="#5-v-show" class="headerlink" title="5.v-show"></a>5.v-show</h3><p>演示代码:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;&quot;</span> <span class="attr">v-show</span>=<span class="string">&quot;isShow&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;&quot;</span> <span class="attr">v-show</span>=<span class="string">&quot;age&gt;=18&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;changeIsShow&quot;</span>&gt;</span>切换绑定状态<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;addAge&quot;</span>&gt;</span>添加年龄<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> app = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">    <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span><br><span class="line">    <span class="attr">data</span>: &#123;</span><br><span class="line">        <span class="attr">isShow</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="attr">age</span>: <span class="number">16</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">methods</span>: &#123;</span><br><span class="line">        <span class="attr">changeIsShow</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="built_in">this</span>.isShow = !<span class="built_in">this</span>.isShow</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">addAge</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="built_in">this</span>.age++</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<ul>
<li>  <strong>v-show</strong>指令作用是：根据<strong>ture</strong>,<strong>false</strong>切换元素的显示状态</li>
<li>  原理是修改元素的<strong>display</strong>属性，实现显示隐藏</li>
<li>  指令后面的内容，最终都会解析为<strong>布尔值</strong></li>
<li>  值为<strong>true</strong>元素显示，值为<strong>false</strong>元素隐藏</li>
</ul>
<h3 id="6-v-if"><a href="#6-v-if" class="headerlink" title="6.v-if"></a>6.v-if</h3><p>演示代码:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;toggleIsShow&quot;</span>&gt;</span>显示隐藏<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 操作 dom 直接移除 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">v-if</span>=<span class="string">&quot;isShow&quot;</span>&gt;</span>p标签<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 操作样式 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">v-show</span>=<span class="string">&quot;isShow&quot;</span>&gt;</span>p标签<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> app = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">    <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span><br><span class="line">    <span class="attr">data</span>: &#123;</span><br><span class="line">        <span class="attr">isShow</span>: <span class="literal">false</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">methods</span>: &#123;</span><br><span class="line">        <span class="attr">toggleIsShow</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="built_in">this</span>.isShow = !<span class="built_in">this</span>.isShow</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<p><img src="/images/vue2/v-if.gif"></p>
<ul>
<li>  <strong>v-if</strong>指令作用是：根据<strong>ture</strong>,<strong>false</strong>切换元素的显示状态</li>
<li>  本质是通过操作 dom 元素来切换显示状态</li>
<li>  表达式为<strong>true</strong>元素存在 dom 数中，为<strong>false</strong>元素从 dom 树中移除</li>
</ul>
<h3 id="7-v-bind"><a href="#7-v-bind" class="headerlink" title="7.v-bind"></a>7.v-bind</h3><p>演示代码:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">v-bind:src</span>=<span class="string">&quot;imgSrc&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">:src</span>=<span class="string">&quot;imgSrc&quot;</span> <span class="attr">:title</span>=<span class="string">&quot;imgTitle+&#x27;!&#x27;&quot;</span> <span class="attr">:class</span>=<span class="string">&quot;isActive? &#x27;active&#x27;:&#x27;&#x27; &quot;</span> @<span class="attr">click</span>=<span class="string">&quot;add&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">:src</span>=<span class="string">&quot;imgSrc&quot;</span> <span class="attr">:title</span>=<span class="string">&quot;imgTitle+&#x27;!&#x27;&quot;</span> <span class="attr">:class</span>=<span class="string">&quot;&#123;active:isActive&#125;&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;add&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> app = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">    <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span><br><span class="line">    <span class="attr">data</span>: &#123;</span><br><span class="line">        <span class="attr">imgSrc</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">        <span class="attr">imgTitle</span>: <span class="string">&#x27;demo&#x27;</span>,</span><br><span class="line">        <span class="attr">isActive</span>: <span class="literal">false</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">methods</span>: &#123;</span><br><span class="line">        <span class="attr">add</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="built_in">this</span>.isActive = !<span class="built_in">this</span>.isActive</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<ul>
<li>  <strong>v-bind</strong>指令作用是：为元素绑定属性</li>
<li>  完整写法是<strong>v-bind:属性名</strong></li>
<li>  简洁的话可以直接省略 <strong>v-bind</strong>,只保留 <strong>:属性名</strong></li>
</ul>
<h3 id="8-图片切换练习"><a href="#8-图片切换练习" class="headerlink" title="8.图片切换练习"></a>8.图片切换练习</h3><p>演示效果:<br><img src="/images/vue2/demo2.gif"></p>
<ol>
<li>定义图片数组</li>
<li>添加图片索引</li>
<li>绑定 src 属性(<strong>v-bind</strong>)</li>
<li>图片切换逻辑(<strong>v-on</strong>)</li>
<li>显示状态切换(<strong>v-show</strong>)</li>
</ol>
<center>加油，再坚持一下!</center>

<h3 id="9-v-for"><a href="#9-v-for" class="headerlink" title="9.v-for"></a>9.v-for</h3><p>演示代码:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;添加数据&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;add&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;移除数据&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;remove&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;(item,index) in arr&quot;</span>&gt;</span>&#123;&#123; index+1 &#125;&#125; hello &#123;&#123; item &#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span> <span class="attr">v-for</span>=<span class="string">&quot;(item,index) in veg&quot;</span> <span class="attr">v-bind:title</span>=<span class="string">&quot;item.name&quot;</span>&gt;</span>&#123;&#123; item.name &#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> app = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">    <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span><br><span class="line">    <span class="attr">data</span>: &#123;</span><br><span class="line">        <span class="attr">arr</span>: [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>],</span><br><span class="line">        <span class="attr">veg</span>: [&#123; <span class="attr">name</span>: <span class="number">123</span> &#125;, &#123; <span class="attr">name</span>: <span class="number">456</span> &#125;],</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">methods</span>: &#123;</span><br><span class="line">        <span class="attr">add</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="built_in">this</span>.arr.push(<span class="number">1</span>)</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">remove</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="built_in">this</span>.arr.shift()</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<p><img src="/images/vue2/v-for.gif"></p>
<ul>
<li>  <strong>v-for</strong>指令作用是：根据数据生成列表结构</li>
<li>  数组经常和 <strong>v-for</strong> 结合使用</li>
<li>  语法是 <strong>(item,index) in 数据</strong></li>
<li>  <strong>item</strong> 和 <strong>index</strong> 可以结合其他指令一起使用</li>
</ul>
<h3 id="10-v-on-补充"><a href="#10-v-on-补充" class="headerlink" title="10.v-on 补充"></a>10.v-on 补充</h3><p>演示代码:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;doIt(666,&#x27;string&#x27;)&quot;</span>&gt;</span>点击<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> @<span class="attr">keyup.enter</span>=<span class="string">&quot;sayHi&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> app = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">    <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span><br><span class="line">    <span class="attr">data</span>: &#123;&#125;,</span><br><span class="line">    <span class="attr">methods</span>: &#123;</span><br><span class="line">        <span class="attr">doIt</span>: <span class="function"><span class="keyword">function</span> (<span class="params">p1, p2</span>) </span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">&#x27;do it&#x27;</span>)</span><br><span class="line">            <span class="built_in">console</span>.log(p1)</span><br><span class="line">            <span class="built_in">console</span>.log(p2)</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="function"><span class="title">sayHi</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">&#x27;吃了没&#x27;</span>)</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<p><img src="/images/vue2/v-on2.gif"></p>
<ul>
<li>  事件绑定的方法写成 <strong>函数调用</strong> 的形式，可以传入自定义参数</li>
<li>  定义方法时需要定义 <strong>形参</strong> 来接收传入的实参</li>
<li>  事件的后面跟上 <strong>.修饰符</strong> 可以对事件进行限制</li>
<li>  <strong>.enter</strong> 可以限制触发的按键为回车</li>
<li>  事件修饰符有多种</li>
</ul>
<h3 id="11-v-model"><a href="#11-v-model" class="headerlink" title="11.v-model"></a>11.v-model</h3><p>演示代码:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;change&quot;</span>&gt;</span>修改message<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;message&quot;</span> @<span class="attr">keyup.enter</span>=<span class="string">&quot;getM&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>&#123;&#123; message &#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> app = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">    <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span><br><span class="line">    <span class="attr">data</span>: &#123;</span><br><span class="line">        <span class="attr">message</span>: <span class="string">&#x27;123&#x27;</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">methods</span>: &#123;</span><br><span class="line">        <span class="attr">getM</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            alert(<span class="built_in">this</span>.message)</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">change</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="built_in">this</span>.message = <span class="string">&#x27;987&#x27;</span></span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<p><img src="/images/vue2/v-model.gif"></p>
<ul>
<li><strong>v-model</strong> 指令作用是：便捷的设置和获取表单元素的值</li>
<li>绑定的数据会和表单元素 <strong>值</strong> 相关联</li>
<li>绑定的数据 <strong>双向绑定</strong> 表单元素的值</li>
</ul>
<h3 id="12-记事本练习"><a href="#12-记事本练习" class="headerlink" title="12.记事本练习"></a>12.记事本练习</h3><p>演示效果:</p>
<p><img src="/images/vue2/demo3.gif"></p>
<ol>
<li>新增</li>
</ol>
<ul>
<li>生成列表结构 <strong>(v-for数组)</strong></li>
<li>获取用户输入 <strong>(v-model)</strong></li>
<li>回车，新增数据</li>
</ul>
<ol start="2">
<li>删除</li>
</ol>
<ul>
<li>点击删除指定的内容 <strong>(v-on splice 索引)</strong></li>
</ul>
<ol start="3">
<li>统计</li>
</ol>
<ul>
<li>统计信息个数 <strong>(v-text arr.length)</strong></li>
</ul>
<ol start="4">
<li>清空</li>
</ol>
<ul>
<li>点击清空所有信息 <strong>(v-on 清空数组)</strong></li>
</ul>
<ol start="5">
<li>隐藏</li>
</ol>
<ul>
<li>没有数据时，隐藏元素 <strong>(v-show v-if 数组非空)</strong></li>
</ul>
<h2 id="4-结束"><a href="#4-结束" class="headerlink" title="4.结束"></a>4.结束</h2><p>此文为博主学习 Vue2.0 时看的视频，我把它写成博客，用大家参考~<br><a href="https://www.bilibili.com/video/BV12J411m7MG?p=1">原文地址</a></p>
]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>Vue</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2021/05/10/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<span id="more"></span>

<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
</search>
